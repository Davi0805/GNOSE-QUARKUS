-- Tabela users
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL
);

-- Tabela companies
CREATE TABLE companies (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

-- Tabela user_company
CREATE TABLE user_company (
    user_id BIGINT NOT NULL,
    company_id BIGINT NOT NULL,
    permission CHAR(1) NOT NULL,
    PRIMARY KEY (user_id, company_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE
);


-- Inserir dados na tabela users
INSERT INTO users (username, password, email, first_name, last_name) VALUES
('john_doe', 'password123', 'john.doe@example.com', 'John', 'Doe'),
('jane_smith', 'password456', 'jane.smith@example.com', 'Jane', 'Smith'),
('alice_jones', 'password789', 'alice.jones@example.com', 'Alice', 'Jones');

-- Inserir dados na tabela companies
INSERT INTO companies (name) VALUES
('Company A'),
('Company B'),
('Company C');

-- Inserir dados na tabela user_company
INSERT INTO user_company (user_id, company_id, permission) VALUES
(1, 1, 'A'), -- John Doe na Company A com permissão 'A'
(1, 2, 'B'), -- John Doe na Company B com permissão 'B'
(2, 1, 'C'), -- Jane Smith na Company A com permissão 'C'
(2, 3, 'A'), -- Jane Smith na Company C com permissão 'A'
(3, 2, 'B'); -- Alice Jones na Company B com permissão 'B'